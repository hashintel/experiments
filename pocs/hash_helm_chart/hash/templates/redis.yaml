{{- $fullName := "hash-redis" -}}
{{- if eq .Values.redis.host $fullName -}}
{{- $component := dict
  "ctx" .
  "component" "redis"
  "domain" $fullName
-}}
{{- $image := "redis:5.0.4" -}}
{{- $configMapName := printf "%s-config" $fullName -}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $configMapName }}
  labels:
    {{- include "component.labels" $component | nindent 4 }}
data:
  REDIS_PORT: {{ .Values.redis.port | quote}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "component.labels" $component | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "component.selectorLabels" $component | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "component.labels" $component | nindent 8 }}
    spec:
      containers:
        - name: {{ $fullName }}
          image: {{ $image | quote }}
          imagePullPolicy: "IfNotPresent"
          args: ["--port {{ .Values.redis.port }}"]
          ports:
            - containerPort: {{ .Values.redis.port }}
          envFrom:
            - configMapRef:
                name: {{ $configMapName }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "component.labels" $component | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.redis.port }}
      targetPort: {{ .Values.redis.port }}
      nodePort: 0
      protocol: TCP
      name: redis
  selector:
    {{- include "component.selectorLabels" $component | nindent 4 }}
{{- end -}}
