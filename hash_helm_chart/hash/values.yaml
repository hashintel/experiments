dev:
  domain: hash.localhost
  k8sdash:
    enable: true
    subdomain: k8s

root:
  domain: hash.localhost

pg:
  # If host is set to "hash-db", a new database will be spawned.
  image: hash-registry.localhost:5000/hash/hash-postgres:local
  host: hash-db
  database: postgres
  port: 5432
  user: postgres
  password: postgres

redis:
  # If host is set to "hash-redis", a ephemeral redis instance will start
  host: hash-redis
  port: 3333
  searchQueueName: search
  collabQueueName: collab

systemAccount:
  name: HASH
  shortname: hash
  emailAddress: noreply@hash.ai
  emailSenderName: Support

searchloader:
  image: hash-registry.localhost:5000/hash/hash-searchloader-prod:local

realtime:
  image: hash-registry.localhost:5000/hash/hash-realtime-prod:local
  pg:
    user: realtime
    password: password

api:
  domain: api.hash.localhost
  image: hash-registry.localhost:5000/hash/hash-api-prod:local
  internal:
    port: 5001

  # .. and other ENV vars.
  SYSTEM_USER_SHORTNAME: system-user
  SYSTEM_USER_PREFERRED_NAME: System User
  SYSTEM_USER_PASSWORD: password
  SYSTEM_USER_EMAIL_ADDRESS: system-user@example.com

  HASH_SEED_USERS: '[{"email":"admin@example.com","shortname":"instance-admin","preferredName":"Instance Admin","password":"verySecret","isInstanceAdmin":true},{"email":"alice@example.com","shortname":"alice","preferredName":"Alice","password":"password"},{"email":"bob@example.com","shortname":"bob01","preferredName":"Bob"}]'

  LOG_LEVEL: debug

  SESSION_SECRET: 123abcreplaceme

  AWS_REGION: us-east-1
  AWS_S3_REGION: us-east-1
  AWS_S3_UPLOADS_BUCKET: some-bucket

  NODE_ENV: production

graph:
  image: hash-registry.localhost:5000/hash/hash-graph-prod:local
  migrateImage: hash-registry.localhost:5000/hash/hash-graph-migrate-prod:local
  port: 4000
  pg:
    database: "graph"
    user: "graph"
    password: "password"

kratos:
  domain: kratos.hash.localhost
  image: hash-registry.localhost:5000/hash/kratos-prod:local
  migrateImage: hash-registry.localhost:5000/hash/kratos-prod:local
  publicPort: 4433
  privatePort: 4434
  pg:
    database: "kratos"
    user: "kratos"
    password: "password"
  cookieSecret: "VERY-INSECURE-AND-SHOULD-ONLY-BE-USED-IN-DEV"
  cipherSecret: "32-LONG-SECRET-NOT-SECURE-AT-ALL"
  apiSecret: "secret"

frontend:
  image: hash-registry.localhost:5000/hash/hash-frontend-prod:local
  domain: hash.localhost
  port: 3000

kubernetes-dashboard:
  hosts:
    - k8sdash.hash.localhost
  service:
    externalPort: 8080
  protocolHttp: true
  # https://github.com/kubernetes/dashboard/blob/master/docs/common/arguments.md
  extraArgs:
    - --enable-skip-login
    - --enable-insecure-login
    - --disable-settings-authorizer
    - --v=999
